{"version":3,"sources":["images/window-close-solid.svg","images/rick-and-morty-logo.png","images/skull-solid.svg","images/heartbeat-solid.svg","images/question-circle-solid.svg","images/user-circle-solid.svg","images/reddit-alien-brands.svg","components/header/Header.js","components/filters/filterByName/FilterByName.js","components/filters/Filters.js","components/characterCard/CharacterCard.js","components/characterList/CharacterList.js","components/iconsContainer/IconsContainer.js","components/characterDetail/CharacterDetail.js","components/characterNotFound/CharacterNotFound.js","services/getDataFromApi.js","App.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","FilterByName","props","htmlFor","id","name","type","placeholder","onKeyUp","handleChange","onKeyPress","handleKeyPress","defaultValue","filterName","Filters","ev","handleFilter","kind","value","target","key","preventDefault","CharacterCard","to","style","textDecoration","imageUrl","species","CharacterList","characters","length","charactersInfo","sort","a","b","map","character","Icons","status","dead","alive","unknown","human","alien","CharacterDetail","close","origin","episodes","CharacterNotFound","getDataFromApi","fetch","catch","then","response","json","data","results","image","episode","App","useState","setCharacters","setFilterName","useEffect","filteredCharacters","filter","toUpperCase","includes","filterObject","exact","path","render","characterId","match","params","foundCharacter","find","parseInt","undefined","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c9da5c5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/window-close-solid.b1f2a762.svg\";","module.exports = __webpack_public_path__ + \"static/media/rick-and-morty-logo.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/skull-solid.63c8b224.svg\";","module.exports = __webpack_public_path__ + \"static/media/heartbeat-solid.ee3b81c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/question-circle-solid.4485f886.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-circle-solid.c3580913.svg\";","module.exports = __webpack_public_path__ + \"static/media/reddit-alien-brands.422193e5.svg\";","import React from 'react';\nimport logo from '../../images/rick-and-morty-logo.png';\nimport './header.scss';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <div className=\"header-logo\">\n                <img\n                    className=\"logo\"\n                    src={logo}\n                    alt=\"rick and morty logo\"\n                ></img>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport './filterByName.scss';\n\nfunction FilterByName(props) {\n    return (\n        <div className=\"text-imput\">\n            <label className=\"text-input__label\" htmlFor=\"search-input\">\n                Find a character!\n                <input\n                    className=\"text-input__field\"\n                    id=\"search-input\"\n                    name=\"search-input\"\n                    type=\"text\"\n                    placeholder=\"for example, 'Rick'\"\n                    onKeyUp={props.handleChange}\n                    onKeyPress={props.handleKeyPress}\n                    defaultValue={props.filterName}\n                ></input>\n            </label>\n        </div>\n    );\n}\n\nexport default FilterByName;\n","import React from 'react';\nimport FilterByName from './filterByName/FilterByName';\nimport './filters.scss';\n\nfunction Filters(props) {\n    const handleChange = (ev) => {\n        props.handleFilter({\n            kind: 'name',\n            value: ev.target.value,\n        });\n    };\n\n    const handleKeyPress = (ev) => {\n        if (ev.key === 'Enter') {\n            ev.preventDefault();\n        }\n    };\n\n    return (\n        <form className=\"form\">\n            <FilterByName\n                handleChange={handleChange}\n                handleKeyPress={handleKeyPress}\n                filterName={props.filterName}\n            />\n        </form>\n    );\n}\n\nexport default Filters;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './characterCard.scss';\n\nfunction CharacterCard(props) {\n    return (\n        <>\n            <Link\n                to={`/character/${props.id}`}\n                style={{ textDecoration: 'none' }}\n            >\n                <img\n                    className=\"character-card__image\"\n                    src={props.imageUrl}\n                    alt={`${props.name}'s pic`}\n                ></img>\n                <div className=\"character-card__info\">\n                    <h1 className=\"character-card__name\">{props.name}</h1>\n                    <h2 className=\"character-card__species\">{props.species}</h2>\n                </div>\n            </Link>\n        </>\n    );\n}\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from '../characterCard/CharacterCard';\nimport './characterList.scss';\n\nfunction CharacterList(props) {\n    if (props.characters.length === 0) {\n        return (\n            <div className=\"not-found__message\">\n                <p>Character not found, try again!</p>\n            </div>\n        );\n    }\n\n    const charactersInfo = props.characters\n        .sort((a, b) => (a.name > b.name ? 1 : -1))\n        .map((character) => {\n            return (\n                <li key={character.id} className=\"character-card\">\n                    <CharacterCard\n                        id={character.id}\n                        imageUrl={character.imageUrl}\n                        name={character.name}\n                        species={character.species}\n                    />\n                </li>\n            );\n        });\n    return <ul className=\"character-list\">{charactersInfo}</ul>;\n}\n\nexport default CharacterList;\n","import React from 'react';\nimport dead from '../../images/skull-solid.svg';\nimport alive from '../../images/heartbeat-solid.svg';\nimport unknown from '../../images/question-circle-solid.svg';\nimport human from '../../images/user-circle-solid.svg';\nimport alien from '../../images/reddit-alien-brands.svg';\nimport './iconsContainer.scss';\n\nfunction Icons(props) {\n    const statusIcon = () => {\n        if (props.status === 'Dead') {\n            return dead;\n        } else if (props.status === 'Alive') {\n            return alive;\n        } else {\n            return unknown;\n        }\n    };\n\n    const speciesIcon = () => {\n        return props.species === 'Human' ? human : alien;\n    };\n    return (\n        <div className=\"icons__nav\">\n            <img\n                className=\"icons__nav-status\"\n                alt={`${props.status}'s pic`}\n                src={statusIcon()}\n            ></img>\n            <img\n                className=\"icons__nav-species\"\n                alt={`${props.species}'s pic`}\n                src={speciesIcon()}\n            ></img>\n        </div>\n    );\n}\n\nexport default Icons;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport close from '../../images/window-close-solid.svg';\nimport Icon from '../iconsContainer/IconsContainer';\nimport './characterDetail.scss';\n\nfunction CharacterDetail(props) {\n    return (\n        <div className=\"modal\">\n            <div className=\"modal__dialog\">\n                <div className=\"modal__button\">\n                    <Link to=\"/\">\n                        <img\n                            className=\"modal__button-close\"\n                            src={close}\n                            alt=\"close icon\"\n                        ></img>\n                    </Link>\n                </div>\n                <div className=\"modal__content\">\n                    <div className=\"modal__content-image\">\n                        <img\n                            className=\"image\"\n                            src={props.character.imageUrl}\n                            alt={`${props.character.name}´s pic`}\n                        ></img>\n                    </div>\n                    <div className=\"modal__content-info\">\n                        <ul className=\"modal__content-list\">\n                            <li className=\"modal__list-name\">\n                                {props.character.name}\n                            </li>\n                            <li>{`Status: ${props.character.status}`}</li>\n                            <li>{`Species: ${props.character.species}`}</li>\n                            <li>{`Origin: ${props.character.origin.name}`}</li>\n                            <li>{`Episodes: ${props.character.episodes.length}`}</li>\n                        </ul>\n                        <div className=\"icons nav\">\n                            <Icon\n                                status={props.character.status}\n                                species={props.character.species}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"modal__overlay\"></div>\n        </div>\n    );\n}\n\nexport default CharacterDetail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport close from '../../images/window-close-solid.svg';\nimport './characterNotFound.scss';\n\nfunction CharacterNotFound(props) {\n    return (\n        <div className=\"modalnf\">\n            <div className=\"modalnf__dialog\">\n                <div className=\"modalnf__button\">\n                    <Link to=\"/\">\n                        <img\n                            className=\"modalnf__button-close\"\n                            src={close}\n                            alt=\"close icon\"\n                        ></img>\n                    </Link>\n                </div>\n                <div className=\"modalnf__content\">\n                    <h1>Character not found</h1>\n                </div>\n            </div>\n            <div className=\"modalnf__overlay\"></div>\n        </div>\n    );\n}\n\nexport default CharacterNotFound;\n","const getDataFromApi = () => {\n    return fetch('https://rickandmortyapi.com/api/character/')\n        .catch(() => {\n            return fetch(\n                'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json'\n            );\n        })\n        .then((response) => response.json())\n        .then((data) => {\n            return data.results.map((character) => {\n                return {\n                    id: character.id,\n                    imageUrl: character.image,\n                    name: character.name,\n                    species: character.species,\n                    origin: character.origin,\n                    status: character.status,\n                    episodes: character.episode,\n                };\n            });\n        });\n};\n\nexport default getDataFromApi;\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './components/header/Header';\nimport Filters from './components/filters/Filters';\nimport CharacterList from './components/characterList/CharacterList';\nimport CharacterDetail from './components/characterDetail/CharacterDetail';\nimport CharacterNotFound from './components/characterNotFound/CharacterNotFound';\nimport getDataFromApi from './services/getDataFromApi';\nimport './app.scss';\n\nfunction App() {\n    const [characters, setCharacters] = useState([]);\n    const [filterName, setFilterName] = useState('');\n    const [filterSpecies, setFilterSpecies] = useState([]);\n\n    useEffect(() => {\n        getDataFromApi().then((data) => {\n            setCharacters(data);\n        });\n    }, []);\n\n    const handleFilter = (filterObject) => {\n        if (filterObject.kind === 'name') {\n            setFilterName(filterObject.value);\n        }\n    };\n\n    const filteredCharacters = characters.filter((character) => {\n        return character.name.toUpperCase().includes(filterName.toUpperCase());\n    });\n\n    const renderCharacterDetail = (props) => {\n        const characterId = props.match.params.id;\n        const foundCharacter = characters.find((character) => {\n            return character.id === parseInt(characterId);\n        });\n        if (foundCharacter !== undefined) {\n            return <CharacterDetail character={foundCharacter} />;\n        } else {\n            return <CharacterNotFound />;\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <main className=\"main\">\n                <Filters handleFilter={handleFilter} filterName={filterName} />\n                <CharacterList characters={filteredCharacters} />\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/character/:id\"\n                        render={renderCharacterDetail}\n                    />\n                </Switch>\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}